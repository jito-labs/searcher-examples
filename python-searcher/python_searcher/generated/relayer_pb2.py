# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: relayer.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import packet_pb2 as packet__pb2
import shared_pb2 as shared__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\rrelayer.proto\x12\x07relayer\x1a\x0cpacket.proto\x1a\x0cshared.proto\"\x16\n\x14GetTpuConfigsRequest\"Y\n\x15GetTpuConfigsResponse\x12\x1b\n\x03tpu\x18\x01 \x01(\x0b\x32\x0e.shared.Socket\x12#\n\x0btpu_forward\x18\x02 \x01(\x0b\x32\x0e.shared.Socket\"\x19\n\x17SubscribePacketsRequest\"\x8f\x01\n\x18SubscribePacketsResponse\x12\x1e\n\x06header\x18\x01 \x01(\x0b\x32\x0e.shared.Header\x12&\n\theartbeat\x18\x02 \x01(\x0b\x32\x11.shared.HeartbeatH\x00\x12$\n\x05\x62\x61tch\x18\x03 \x01(\x0b\x32\x13.packet.PacketBatchH\x00\x42\x05\n\x03msg2\xb8\x01\n\x07Relayer\x12P\n\rGetTpuConfigs\x12\x1d.relayer.GetTpuConfigsRequest\x1a\x1e.relayer.GetTpuConfigsResponse\"\x00\x12[\n\x10SubscribePackets\x12 .relayer.SubscribePacketsRequest\x1a!.relayer.SubscribePacketsResponse\"\x00\x30\x01\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'relayer_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _GETTPUCONFIGSREQUEST._serialized_start=54
  _GETTPUCONFIGSREQUEST._serialized_end=76
  _GETTPUCONFIGSRESPONSE._serialized_start=78
  _GETTPUCONFIGSRESPONSE._serialized_end=167
  _SUBSCRIBEPACKETSREQUEST._serialized_start=169
  _SUBSCRIBEPACKETSREQUEST._serialized_end=194
  _SUBSCRIBEPACKETSRESPONSE._serialized_start=197
  _SUBSCRIBEPACKETSRESPONSE._serialized_end=340
  _RELAYER._serialized_start=343
  _RELAYER._serialized_end=527
# @@protoc_insertion_point(module_scope)
