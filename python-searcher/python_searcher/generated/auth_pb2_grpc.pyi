"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import auth_pb2
import grpc

class AuthServiceStub:
    """/ This service is responsible for issuing auth tokens to clients for API access."""

    def __init__(self, channel: grpc.Channel) -> None: ...
    GenerateAuthChallenge: grpc.UnaryUnaryMultiCallable[
        auth_pb2.GenerateAuthChallengeRequest,
        auth_pb2.GenerateAuthChallengeResponse,
    ]
    """/ Returns a challenge, client is expected to sign this challenge with an appropriate keypair in order to obtain access tokens."""
    GenerateAuthTokens: grpc.UnaryUnaryMultiCallable[
        auth_pb2.GenerateAuthTokensRequest,
        auth_pb2.GenerateAuthTokensResponse,
    ]
    """/ Provides the client with the initial pair of auth tokens for API access."""
    RefreshAccessToken: grpc.UnaryUnaryMultiCallable[
        auth_pb2.RefreshAccessTokenRequest,
        auth_pb2.RefreshAccessTokenResponse,
    ]
    """/ Call this method with a non-expired refresh token to obtain a new access token."""

class AuthServiceServicer(metaclass=abc.ABCMeta):
    """/ This service is responsible for issuing auth tokens to clients for API access."""

    @abc.abstractmethod
    def GenerateAuthChallenge(
        self,
        request: auth_pb2.GenerateAuthChallengeRequest,
        context: grpc.ServicerContext,
    ) -> auth_pb2.GenerateAuthChallengeResponse:
        """/ Returns a challenge, client is expected to sign this challenge with an appropriate keypair in order to obtain access tokens."""
    @abc.abstractmethod
    def GenerateAuthTokens(
        self,
        request: auth_pb2.GenerateAuthTokensRequest,
        context: grpc.ServicerContext,
    ) -> auth_pb2.GenerateAuthTokensResponse:
        """/ Provides the client with the initial pair of auth tokens for API access."""
    @abc.abstractmethod
    def RefreshAccessToken(
        self,
        request: auth_pb2.RefreshAccessTokenRequest,
        context: grpc.ServicerContext,
    ) -> auth_pb2.RefreshAccessTokenResponse:
        """/ Call this method with a non-expired refresh token to obtain a new access token."""

def add_AuthServiceServicer_to_server(servicer: AuthServiceServicer, server: grpc.Server) -> None: ...
