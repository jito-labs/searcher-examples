"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _Role:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _RoleEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Role.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    RELAYER: _Role.ValueType  # 0
    SEARCHER: _Role.ValueType  # 1
    VALIDATOR: _Role.ValueType  # 2
    SHREDSTREAM_SUBSCRIBER: _Role.ValueType  # 3

class Role(_Role, metaclass=_RoleEnumTypeWrapper): ...

RELAYER: Role.ValueType  # 0
SEARCHER: Role.ValueType  # 1
VALIDATOR: Role.ValueType  # 2
SHREDSTREAM_SUBSCRIBER: Role.ValueType  # 3
global___Role = Role

@typing_extensions.final
class GenerateAuthChallengeRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ROLE_FIELD_NUMBER: builtins.int
    PUBKEY_FIELD_NUMBER: builtins.int
    role: global___Role.ValueType
    """/ Role the client is attempting to generate tokens for."""
    pubkey: builtins.bytes
    """/ Client's 32 byte pubkey."""
    def __init__(
        self,
        *,
        role: global___Role.ValueType = ...,
        pubkey: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["pubkey", b"pubkey", "role", b"role"]) -> None: ...

global___GenerateAuthChallengeRequest = GenerateAuthChallengeRequest

@typing_extensions.final
class GenerateAuthChallengeResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CHALLENGE_FIELD_NUMBER: builtins.int
    challenge: builtins.str
    def __init__(
        self,
        *,
        challenge: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["challenge", b"challenge"]) -> None: ...

global___GenerateAuthChallengeResponse = GenerateAuthChallengeResponse

@typing_extensions.final
class GenerateAuthTokensRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CHALLENGE_FIELD_NUMBER: builtins.int
    CLIENT_PUBKEY_FIELD_NUMBER: builtins.int
    SIGNED_CHALLENGE_FIELD_NUMBER: builtins.int
    challenge: builtins.str
    """/ The pre-signed challenge."""
    client_pubkey: builtins.bytes
    """/ The signing keypair's corresponding 32 byte pubkey."""
    signed_challenge: builtins.bytes
    """/ The 64 byte signature of the challenge signed by the client's private key. The private key must correspond to
    the pubkey passed in the [GenerateAuthChallenge] method. The client is expected to sign the challenge token
    prepended with their pubkey. For example sign(pubkey, challenge).
    """
    def __init__(
        self,
        *,
        challenge: builtins.str = ...,
        client_pubkey: builtins.bytes = ...,
        signed_challenge: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["challenge", b"challenge", "client_pubkey", b"client_pubkey", "signed_challenge", b"signed_challenge"]) -> None: ...

global___GenerateAuthTokensRequest = GenerateAuthTokensRequest

@typing_extensions.final
class Token(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUE_FIELD_NUMBER: builtins.int
    EXPIRES_AT_UTC_FIELD_NUMBER: builtins.int
    value: builtins.str
    """/ The token."""
    @property
    def expires_at_utc(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """/ When the token will expire."""
    def __init__(
        self,
        *,
        value: builtins.str = ...,
        expires_at_utc: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["expires_at_utc", b"expires_at_utc"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["expires_at_utc", b"expires_at_utc", "value", b"value"]) -> None: ...

global___Token = Token

@typing_extensions.final
class GenerateAuthTokensResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACCESS_TOKEN_FIELD_NUMBER: builtins.int
    REFRESH_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def access_token(self) -> global___Token:
        """/ The token granting access to resources."""
    @property
    def refresh_token(self) -> global___Token:
        """/ The token used to refresh the access_token. This has a longer TTL than the access_token."""
    def __init__(
        self,
        *,
        access_token: global___Token | None = ...,
        refresh_token: global___Token | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["access_token", b"access_token", "refresh_token", b"refresh_token"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["access_token", b"access_token", "refresh_token", b"refresh_token"]) -> None: ...

global___GenerateAuthTokensResponse = GenerateAuthTokensResponse

@typing_extensions.final
class RefreshAccessTokenRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REFRESH_TOKEN_FIELD_NUMBER: builtins.int
    refresh_token: builtins.str
    """/ Non-expired refresh token obtained from the [GenerateAuthTokens] method."""
    def __init__(
        self,
        *,
        refresh_token: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["refresh_token", b"refresh_token"]) -> None: ...

global___RefreshAccessTokenRequest = RefreshAccessTokenRequest

@typing_extensions.final
class RefreshAccessTokenResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACCESS_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def access_token(self) -> global___Token:
        """/ Fresh access_token."""
    def __init__(
        self,
        *,
        access_token: global___Token | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["access_token", b"access_token"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["access_token", b"access_token"]) -> None: ...

global___RefreshAccessTokenResponse = RefreshAccessTokenResponse
